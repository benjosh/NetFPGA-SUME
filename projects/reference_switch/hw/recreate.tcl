#
# Vivado (TM) v2014.2 (64-bit)
#
# recreate.tcl: Tcl script for re-creating project 'reference_switch'
#
# Generated by Vivado on Mon Nov 24 14:17:22 GMT 2014
# IP Build 924643 on Fri May 30 09:20:16 MDT 2014
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (recreate.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    <none>
#
# 3. The following remote source files that were added to the original project:-
#
#    "/root/NetFPGA-SUME-2014.2/projects/reference_switch/hw/synth/reference_switch.srcs/sources_1/ip/input_arbiter_ip/input_arbiter_ip.xci"
#    "/root/NetFPGA-SUME-2014.2/projects/reference_switch/hw/synth/reference_switch.srcs/sources_1/bd/pcie2axilite_sub/pcie2axilite_sub.bd"
#    "/root/NetFPGA-SUME-2014.2/projects/reference_switch/hw/source/nf10_datapath.v"
#    "/root/NetFPGA-SUME-2014.2/projects/reference_switch/hw/source/top.v"
#    "/root/NetFPGA-SUME-2014.2/lib/hw/std/constraints/vc709_generic.xdc"
#    "/root/NetFPGA-SUME-2014.2/lib/hw/std/constraints/vc709_generic_bit.xdc"
#    "/root/NetFPGA-SUME-2014.2/projects/reference_switch/hw/constraints/top.xdc"
#    "/root/NetFPGA-SUME-2014.2/projects/reference_switch/hw/constraints/10g_interface.xdc"
#
#*****************************************************************************************

# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/synth"]"

# Create project
create_project reference_switch ./reference_switch

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [get_projects reference_switch]
set_property "default_lib" "xil_defaultlib" $obj
set_property "part" "xc7vx690tffg1761-2" $obj
set_property "simulator_language" "Mixed" $obj
set_property "source_mgmt_mode" "DisplayOnly" $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set IP repository paths
set obj [get_filesets sources_1]
set_property "ip_repo_paths" "[file normalize "$origin_dir/../../../lib/ip_repo"]" $obj

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 "[file normalize "$origin_dir/synth/reference_switch.srcs/sources_1/ip/input_arbiter_ip/input_arbiter_ip.xci"]"\
 "[file normalize "$origin_dir/synth/reference_switch.srcs/sources_1/bd/pcie2axilite_sub/pcie2axilite_sub.bd"]"\
 "[file normalize "$origin_dir/source/nf10_datapath.v"]"\
 "[file normalize "$origin_dir/source/top.v"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
set file "$origin_dir/synth/reference_switch.srcs/sources_1/ip/input_arbiter_ip/input_arbiter_ip.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "generate_synth_checkpoint" "0" $file_obj


# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property "top" "top" $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Empty (no sources present)

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]

# Create 'constraints' fileset (if not found)
if {[string equal [get_filesets -quiet constraints] ""]} {
  create_fileset -constrset constraints
}

# Set 'constraints' fileset object
set obj [get_filesets constraints]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/../../../lib/hw/std/constraints/vc709_generic.xdc"]"
set file_added [add_files -norecurse -fileset $obj $file]
set file "$origin_dir/../../../lib/hw/std/constraints/vc709_generic.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constraints] [list "*$file"]]
set_property "file_type" "XDC" $file_obj
set_property "is_enabled" "0" $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/../../../lib/hw/std/constraints/vc709_generic_bit.xdc"]"
set file_added [add_files -norecurse -fileset $obj $file]
set file "$origin_dir/../../../lib/hw/std/constraints/vc709_generic_bit.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constraints] [list "*$file"]]
set_property "file_type" "XDC" $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/constraints/top.xdc"]"
set file_added [add_files -norecurse -fileset $obj $file]
set file "$origin_dir/constraints/top.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constraints] [list "*$file"]]
set_property "file_type" "XDC" $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/constraints/10g_interface.xdc"]"
set file_added [add_files -norecurse -fileset $obj $file]
set file "$origin_dir/constraints/10g_interface.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constraints] [list "*$file"]]
set_property "file_type" "XDC" $file_obj

# Set 'constraints' fileset properties
set obj [get_filesets constraints]

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
# Empty (no sources present)

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
  create_run -name synth_1 -part xc7vx690tffg1761-2 -flow {Vivado Synthesis 2014} -strategy "Vivado Synthesis Defaults" -constrset constraints
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2014" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property "constrset" "constraints" $obj
set_property "part" "xc7vx690tffg1761-2" $obj

# Create 'synth' run (if not found)
if {[string equal [get_runs -quiet synth] ""]} {
  create_run -name synth -part xc7vx690tffg1761-2 -flow {Vivado Synthesis 2013} -strategy "Vivado Synthesis Defaults" -constrset constraints
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth]
  set_property flow "Vivado Synthesis 2013" [get_runs synth]
}
set obj [get_runs synth]
set_property "constrset" "constraints" $obj
set_property "part" "xc7vx690tffg1761-2" $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
  create_run -name impl_1 -part xc7vx690tffg1761-2 -flow {Vivado Implementation 2014} -strategy "Vivado Implementation Defaults" -constrset constraints -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2014" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property "constrset" "constraints" $obj
set_property "part" "xc7vx690tffg1761-2" $obj

# Create 'impl' run (if not found)
if {[string equal [get_runs -quiet impl] ""]} {
  create_run -name impl -part xc7vx690tffg1761-2 -flow {Vivado Implementation 2013} -strategy "Performance_Explore" -constrset constraints -parent_run synth
} else {
  set_property strategy "Performance_Explore" [get_runs impl]
  set_property flow "Vivado Implementation 2013" [get_runs impl]
}
set obj [get_runs impl]
set_property "constrset" "constraints" $obj
set_property "part" "xc7vx690tffg1761-2" $obj
set_property "steps.opt_design.args.directive" "Explore" $obj
set_property "steps.place_design.args.directive" "Explore" $obj
set_property "steps.phys_opt_design.is_enabled" "1" $obj
set_property "steps.phys_opt_design.args.directive" "Explore" $obj
set_property "steps.route_design.args.directive" "Explore" $obj

# set the current impl run
current_run -implementation [get_runs impl_1]

puts "INFO: Project created:reference_switch"
